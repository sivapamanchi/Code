Imports BXGDiagnostics


Namespace BluegreenOnline


Partial Class enrollSuccess
    Inherits System.Web.UI.Page

#Region " Web Form Designer Generated Code "

    'This call is required by the Web Form Designer.
    <System.Diagnostics.DebuggerStepThrough()> Private Sub InitializeComponent()

	End Sub
    Protected WithEvents rdoDemoAge As System.Web.UI.WebControls.RadioButtonList
    Protected WithEvents rdoDemoIncome As System.Web.UI.WebControls.RadioButtonList


    Private Sub Page_Init(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Init
        'CODEGEN: This method call is required by the Web Form Designer
        'Do not modify it using the code editor.
        InitializeComponent()
    End Sub

#End Region

    Private objLogging As BXGDiagnostics.EventLogging

    Private Class clsAcctContract
        Public PRORDER As String
        Public ACCT As String
        Public PRONAME As String
    End Class

    Private Sub Page_Load(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles MyBase.Load
        objLogging = New EventLogging("BlueGreenOnline", "enrollSuccess")

        If IsAS400Available() Then
            If Not IsPostBack Then

                getCountries()
                getAccountStats()
                changeCountries()
                LoadAcctContractInfo()

            End If
        Else
            Response.Redirect("siteMaintenance.aspx", True)
        End If
    End Sub

    Private Sub LoadAcctContractInfo()
        If Convert.ToInt32(Session("EnrollAcctNo")) > 0 Then
            Dim C As New clsDBConnectivity
            Try
                Dim drAcct As SqlClient.SqlDataReader
                Dim iCurrProj As Integer = 0
                Dim iProjOrder As Integer = 1
                Dim alCurrProj As New ArrayList

                C.dbCmnd.CommandText = "uspGetOwnerAccountsAS400"
                C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
                C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@arvact", System.Data.SqlDbType.VarChar, 6)).Value = Convert.ToInt32(Session("EnrollAcctNo"))

                drAcct = C.dbCmnd.ExecuteReader()
                Dim cAC As New clsAcctContract

                While drAcct.Read()
                    cAC = New clsAcctContract
                    cAC.PRORDER = iProjOrder.ToString()
                    cAC.PRONAME = drAcct("ProjNm")
                    cAC.ACCT = drAcct("ACCT")
                    alCurrProj.Add(cAC)
                    iProjOrder = iProjOrder + 1
                End While

                'Get the last guy on the list
                If Not drAcct.HasRows Then
                    rptContracts.Visible = False
                End If

                drAcct.Close()

                'Bind repeater
                rptContracts.DataSource = alCurrProj
                rptContracts.DataBind()
            Catch ex As Exception
                rptContracts.Visible = False
            End Try

            C.Close()
            C = Nothing
        Else
            rptContracts.Visible = False
        End If
    End Sub

    Private Sub getAccountStats()
        Dim dbDataReader As SqlClient.SqlDataReader
        Dim C As New clsDBConnectivity

        'Pull up account info for Enrollment Completion
        C.dbCmnd.CommandText = "uspGetAccountStatsForEnrollment"
        C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
        C.dbCmnd.Parameters.Clear()
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@AcctNo", System.Data.SqlDbType.Int)).Value = Convert.ToInt32(Session("EnrollAcctNo"))

        dbDataReader = C.dbCmnd.ExecuteReader()

        If dbDataReader.HasRows Then
            dbDataReader.Read()
            lblAcctNo.Text = dbDataReader("ARVACT")
            lblFirstName.Text = dbDataReader("NameFirst") & ""
            lblLastName.Text = dbDataReader("NameLast") & ""
            ddlCountry.ClearSelection()
            If (dbDataReader("CountryCode") & "") <> "" Then
                ddlCountry.SelectedIndex = ddlCountry.Items.IndexOf(ddlCountry.Items.FindByValue(dbDataReader("CountryCode") & ""))
            End If
            Session("enrollStateHolder") = dbDataReader("State") & ""
            If Session("enrollStateHolder") = "" Then Session("enrollStateHolder") = Right("  " & dbDataReader("RegionCode"), 2)
            txtHomePhone.Text = dbDataReader("PhoneHome") & ""
            txtDayPhone.Text = dbDataReader("PhoneCell") & ""
                txtEmail.Text = dbDataReader("Email") & ""
            txtCity.Text = dbDataReader("City") & ""
            txtZip.Text = dbDataReader("PostalCode") & ""

            'Present form fields for US or international users
            If dbDataReader("CountryCode").ToString() = "US" Then
                pnlCountryNotUS.Visible = False
                pnlCountryUS.Visible = True
                lblAdd2Req.Visible = False

                txtAddress1.Text = dbDataReader("Address1") & ""
                txtAddress2.Text = dbDataReader("Address2") & ""
            Else
                pnlCountryNotUS.Visible = True
                pnlCountryUS.Visible = False
                lblAdd2Req.Visible = True

                Dim sAddr As String = dbDataReader("Address1")
                Dim arAddr() As String
                Try
                    arAddr = sAddr.Split(ControlChars.CrLf)
                    txtAddress1.Text = Trim(arAddr(0))
                    txtAddress2.Text = Trim(arAddr(1))
                    txtAddress3.Text = Trim(arAddr(2))
                Catch ex As Exception

                End Try

                'Try to set the country dropdown
                For Each li As ListItem In ddlCountry.Items
                    If sAddr.IndexOf(li.Text) > 0 Or dbDataReader("PostalCode").ToString().IndexOf(li.Text) > 0 Then
                        ddlCountry.ClearSelection()
                        ddlCountry.SelectedIndex = ddlCountry.Items.IndexOf(ddlCountry.Items.FindByText(li.Text))
                        Exit For
                    End If
                Next
            End If
        End If

        dbDataReader.Close()

        C.Close()
        C = Nothing
    End Sub

    Private Sub getCountries()
        Dim dbDataReader As SqlClient.SqlDataReader
        Dim C As New clsDBConnectivity
        'Pull out countries to populate corresponding dropdown

        'Put a US option at the top of the list.
        Dim liUS As New ListItem
        liUS.Value = "US"
        liUS.Text = "UNITED STATES"
        ddlCountry.Items.Add(liUS)

            Session.Remove("msg")
            'By Default its US Domestic Address
            Session("msg") = True

        C.dbCmnd.CommandText = "uspGetCountries"
        C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
        dbDataReader = C.dbCmnd.ExecuteReader()

        While dbDataReader.Read()
            Dim li As New ListItem

            li.Value = dbDataReader("CountryCode")
            li.Text = dbDataReader("CountryName")

                If dbDataReader("CountryCode") = "US" Then
                    li.Selected = True
                Else
                    li.Selected = False
                    Session("msg") = False

                End If
                Session("msg") = True
                ddlCountry.Items.Add(li)


            End While

            dbDataReader.Close()
            C.Close()
            C = Nothing
        End Sub


    Private Sub changeCountries()

        If ddlCountry.SelectedValue <> "US" Then
            'lblPostal.Text = "Postal Code:"
            pnlCountryNotUS.Visible = True
            pnlCountryUS.Visible = False
            lblAdd2Req.Visible = True
        Else
            'lblPostal.Text = "Zip:"
            pnlCountryNotUS.Visible = False
            pnlCountryUS.Visible = True
            lblAdd2Req.Visible = False

            Dim dbDataReader As SqlClient.SqlDataReader
            Dim C As New clsDBConnectivity

            'Pull out states/provinces to populate corresponding dropdown
            C.dbCmnd.CommandText = "uspGetStatesProvinces"
            C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
            C.dbCmnd.Parameters.Clear()
            C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@CountryCode", System.Data.SqlDbType.VarChar)).Value = ddlCountry.SelectedValue

            dbDataReader = C.dbCmnd.ExecuteReader()
            ddlState.Items.Clear()

            If dbDataReader.HasRows Then
                Dim liBlank As New ListItem
                liBlank.Text = ""
                liBlank.Value = ""
                ddlState.Items.Add(liBlank)

                While dbDataReader.Read()
                    Dim li2 As New ListItem

                    li2.Value = Right("  " & dbDataReader("RegionCode"), 2)
                    li2.Text = dbDataReader("Subdivision1")
                    ddlState.Items.Add(li2)

                End While
            Else
                Dim liBlank As New ListItem
                liBlank.Text = "N/A"
                liBlank.Value = ""
                ddlState.Items.Add(liBlank)
            End If

            dbDataReader.Close()
            C.Close()
            C = Nothing

            ddlState.ClearSelection()
            ddlState.SelectedIndex = ddlState.Items.IndexOf(ddlState.Items.FindByValue(Session("enrollStateHolder") & ""))
        End If
    End Sub

    Private Sub addDemographics()

        Dim dbDataReader As SqlClient.SqlDataReader
        Dim C As New clsDBConnectivity
            Dim chklistString As String


        'Add demographics information from enrollment form
        C.dbCmnd.CommandText = "uspAddEnrollmentDemographics"
        C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
        C.dbCmnd.Parameters.Clear()
        For Each chklistItem As ListItem In chklistVacExp.Items
            If chklistItem.Selected Then
                chklistString = chklistString & "1"
            Else
                chklistString = chklistString & "0"
            End If
        Next


        ' If chklistString.Length > 0 Then
        'chklistString = Left(chklistString, chklistString.Length - 1)
        'End If
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@VacExp", System.Data.SqlDbType.VarChar, 2000)).Value = chklistString
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ProgramID", System.Data.SqlDbType.Int)).Value = "1"
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@OwnerID", System.Data.SqlDbType.Int)).Value = Convert.ToInt32(Session("EnrollAcctNo"))
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Destination", System.Data.SqlDbType.VarChar, 50)).Value = ddlDestination.SelectedValue
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Age", System.Data.SqlDbType.VarChar, 20)).Value = "" 'rdoDemoAge.SelectedValue
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Income", System.Data.SqlDbType.VarChar, 20)).Value = "" 'rdoDemoIncome.SelectedValue
        'If chkPromo.Checked = True Then
        'dbCmd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Promo", System.Data.SqlDbType.VarChar, 1)).Value = "1"
        'Else
        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Promo", System.Data.SqlDbType.VarChar, 1)).Value = "0"
        'End If
            C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@iFormat", System.Data.SqlDbType.VarChar, 2)).Value = ""
            'If chkSubscribe.Checked = True Then
            '    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Subscribe", System.Data.SqlDbType.VarChar, 1)).Value = "1"
            'Else
            C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@Subscribe", System.Data.SqlDbType.VarChar, 1)).Value = "0"
            'End If


            dbDataReader = C.dbCmnd.ExecuteReader()


            dbDataReader.Close()
            C.Close()
            C = Nothing

    End Sub

    Private Sub btnNoChanges_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles btnNoChanges.Click
        addDemographics()

            Session("email_id") = txtEmail.Text
        Session("password") = Session("passwordTemp")
        Response.Redirect("default.aspx")
    End Sub

    Private Sub ddlCountry_SelectedIndexChanged(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles ddlCountry.SelectedIndexChanged
        changeCountries()
    End Sub

    Private Function UpdateAddress() As Boolean
        If VerifyAddress() Then
            'Update address in database if it is a good address


            ' If no form errors
            If ErrorCheck() Then
                Try
                    Dim C As New clsDBConnectivity


                    C.dbCmnd.CommandText = "uspUpdateAccountStats"
                    C.dbCmnd.CommandType = System.Data.CommandType.StoredProcedure
                    C.dbCmnd.Parameters.Clear()
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@ARVACT", System.Data.SqlDbType.Int)).Value = lblAcctNo.Text & ""
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@address1", System.Data.SqlDbType.VarChar, 255)).Value = txtAddress1.Text & ""
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@address2", System.Data.SqlDbType.VarChar, 100)).Value = txtAddress2.Text & ""
                    If ddlCountry.SelectedValue <> "US" Then
                        Dim sZip As String = ""
                        If txtAddress3.Text.Length > 0 Then
                            sZip = txtAddress3.Text
                        ElseIf txtAddress2.Text.Length > 0 Then
                            sZip = txtAddress2.Text
                        End If

                        sZip = sZip.Trim()
                        Dim iZipStart As Integer = 0
                        Dim iZipEnd As Integer = sZip.Length
                        For x As Integer = 0 To sZip.Length - 1
                            If sZip.Substring(x, 1) = " " Then
                                If (sZip.Substring(x).Length > 3) Then
                                    If ((sZip.Length - x) - iZipStart > 3) Then
                                        iZipStart = x
                                        iZipEnd = sZip.Length - x
                                    End If
                                Else
                                    iZipEnd = x - iZipStart
                                End If
                            End If
                        Next
                        sZip = sZip.Substring(iZipStart, iZipEnd).Replace(" ", "")

                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@address3", System.Data.SqlDbType.VarChar, 300)).Value = txtAddress3.Text & ""
                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@zip_code", System.Data.SqlDbType.VarChar, 10)).Value = sZip
                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@state", System.Data.SqlDbType.VarChar, 40)).Value = ""
                    Else
                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@zip_code", System.Data.SqlDbType.VarChar, 10)).Value = txtZip.Text & ""
                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@state", System.Data.SqlDbType.VarChar, 40)).Value = ddlState.SelectedItem.Text
                    End If
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@city", System.Data.SqlDbType.VarChar, 50)).Value = txtCity.Text & ""
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@country", System.Data.SqlDbType.VarChar, 3)).Value = ddlCountry.SelectedValue
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@phoneHome", System.Data.SqlDbType.BigInt)).Value = txtHomePhone.Text & ""
                    C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@phoneBusiness", System.Data.SqlDbType.BigInt)).Value = txtDayPhone.Text & ""
                        C.dbCmnd.Parameters.Add(New System.Data.SqlClient.SqlParameter("@email", System.Data.SqlDbType.VarChar, 60)).Value = txtEmail.Text & ""

                    C.dbCmnd.ExecuteNonQuery()

                    C.Close()
                    C = Nothing

                    Return True

                Catch ex As Exception
                    lblAddVerifyErr.Visible = True
                    lblAddVerifyErr.Text = "We are unable to update your information at this time.  Please try again later."
                    Return False
                End Try
            Else
                Return False
            End If
        End If
    End Function

    Private Function ErrorCheck() As Boolean

        'Error check for form data

        If txtAddress1.Text.Length = 0 Then
            lblAddVerifyErr.Visible = True
            lblAddVerifyErr.Text = "You must enter your street address."
            Return False
        End If

        If ddlCountry.SelectedValue <> "US" Then
            If txtAddress2.Text.Length = 0 Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "You must enter the second line of your address."
                Return False
            End If
        Else
            If txtCity.Text.Length = 0 Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "You must enter your city."
                Return False
            End If

            If txtZip.Text.Length = 0 Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "You must enter your ZIP code."
                Return False
            End If
        End If


        If txtHomePhone.Text.Length > 0 Then
            If Not IsNumeric(txtHomePhone.Text) Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "Please only use numeric digits in your phone number."
                Return False
            End If
            If txtHomePhone.Text.Length < 10 Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "Please enter at least 10 numerical digits for your phone number."
                Return False
            End If
        Else
            lblAddVerifyErr.Visible = True
            lblAddVerifyErr.Text = "You must enter your home phone number."
            Return False
        End If

        If txtDayPhone.Text.Length > 0 Then
            If Not IsNumeric(txtDayPhone.Text) Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "Please only use numeric digits in your phone number."
                Return False
            End If
            If txtDayPhone.Text.Length < 10 Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "Please enter at least 10 numerical digits for your phone number."
                Return False
            End If
        Else
            lblAddVerifyErr.Visible = True
            lblAddVerifyErr.Text = "You must enter your alternate phone number."
            Return False
        End If

            Dim cEmCheck As New clsEmailer
            If Not cEmCheck.IsValidEmail(txtEmail.Text) Then
                lblAddVerifyErr.Visible = True
                lblAddVerifyErr.Text = "You must enter your valid email address."
                Return False
            End If

        Return True
    End Function

    Private Function VerifyAddress() As Boolean
        'Only check inside the United States
        If ddlCountry.SelectedValue = "US" Then
            Dim objAdd As New ADDRESSOBJECTLib.AddressCheck

            'Set the license code for MelissaData, if fail then jump out
            If objAdd.SetLicenseString("3G-29M-6G2") <> 1 Then
                Return False
            End If

            'Initialize our address verification object
                If objAdd.Initialize(System.Configuration.ConfigurationManager.AppSettings("MelissaDataPath"), System.Configuration.ConfigurationManager.AppSettings("MelissaDataPath"), "") <> 0 Then
                    lblAddVerifyErr.Visible = True
                    lblAddVerifyErr.Text = "We are unable to verify your address at this time.  Please try again later."

                    'Log that the MelissaData component was unable to initialize - generates an email alert to us
                    objLogging.LogEvent(Server.MachineName & ": MelissaData is now expired!", Diagnostics.EventLogEntryType.Error)

                    Return False
                Else
                    'Add the address to verify
                    Dim sSelectedState As String = ddlState.SelectedValue
                    objAdd.ClearProperties()
                    objAdd.Address = txtAddress1.Text
                    'objAdd.Address2 = txtAddress2.Text
                    objAdd.City = txtCity.Text
                    objAdd.State = sSelectedState
                    objAdd.Zip = txtZip.Text

                    'Verify the address
                    If objAdd.VerifyAddress() = 0 Then
                        Dim errCode As String = objAdd.ErrorCode
                        Dim errString As String = objAdd.ErrorString
                        'Bad address, return specific feedback or general error
                        If errCode = "R" Then
                            lblAddVerifyErr.Text = "The address you entered was not found.  Please recheck and try again."
                        Else
                            lblAddVerifyErr.Text = errString
                        End If
                        imgAlert.Visible = True
                        lblAddVerifyErr.Visible = True
                        Return False
                    Else
                        'We have a good address, set the fields with scrubbed data
                        lblAddVerifyErr.Visible = False
                        txtAddress1.Text = objAdd.Address
                        'txtAddress2.Text = objAdd.Address2
                        txtCity.Text = objAdd.City
                        ddlState.ClearSelection()
                        Try
                            ddlState.Items.FindByValue(objAdd.State).Selected = True
                        Catch ex As Exception
                            ddlState.Items.FindByValue(sSelectedState).Selected = True
                        End Try
                        txtZip.Text = objAdd.Zip & "-" & objAdd.Plus4
                    End If
                End If

            objAdd = Nothing
        End If

        'If we made it this far then we are good to go!
        Return True
    End Function

    Private Sub btnUpdate_Click(ByVal sender As System.Object, ByVal e As System.Web.UI.ImageClickEventArgs) Handles btnUpdate.Click
        'Prep label for feedback
        lblAddVerifyErr.ForeColor = Color.Red
        lblAddVerifyErr.Visible = False

        'Call the update routines
        If UpdateAddress() Then
            addDemographics()

                Session("email_id") = txtEmail.Text
            Session("password") = Session("passwordTemp")
            Response.Redirect("default.aspx")
        End If
    End Sub

End Class

End Namespace
