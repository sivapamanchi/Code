@model BGModern.Models.ResortModel

@{
    Layout = "~/Views/ResortMasterLayout.cshtml";
}

@section PageStyles {
    <style>
        #map { 
            height: 290px; 
            width: 375px; 
        }

        .contactus-Captcha {
            clear:both;
        }

        .glyphicon {
            font-size: 20px;
        }

    </style>
}

@section PageScript{
<script type="text/javascript" src="~/Scripts/modernizr-2.6.2.js"></script>
<script type="text/javascript" src="../scripts/rollover.js"></script>

<script src="https://maps.google.com/maps/api/js?sensor=false&amp;v=3&amp;libraries=geometry&amp;key=" type="text/javascript"></script>
<script type="text/javascript">

    //<![CDATA[

    var map = null;
    var geocoder = null;
    var directionService = null;
    var directionsDisplay = null;
    var Addre = '@Model.Address1 @Model.City,@Model.State-@Model.Zip';

    var Long = @Model.Longitude;
    var Lat = @Model.Latitude;

    //function called on page load to initialize map objects and track direction
    function load() {
        var mapOptions = {
            zoom: 13,
            center: new google.maps.LatLng(Lat, Long),
            scaleControl: true,
            overviewMapControl: true,
            overviewMapControlOptions: { opened: true },
            mapTypeId: google.maps.MapTypeId.ROADMAP
        };

        map = new google.maps.Map(document.getElementById("map"), mapOptions);
        getLatLong(Addre);
        directionsDisplay = new google.maps.DirectionsRenderer();
        directionsDisplay.setMap(map);
        directionService = new google.maps.DirectionsService();
    }

    function getLatLong(address) {

        var geo = new google.maps.Geocoder;

        if (Lat != null && Long != null && Lat != 0 && Long != 0) {
            var myLatlng = new google.maps.LatLng(Lat, Long);
            map.setCenter(myLatlng);
            var marker = new google.maps.Marker({ map: map, position: myLatlng });

            var infowindow = new google.maps.InfoWindow();

            infowindow.setContent('<font size="1">@Model.Name<br>' + '@Model.Address1<br/>@Model.City,@Model.State-@Model.Zip</font>');
            google.maps.event.addListener(marker, 'click', function () { infowindow.open(map, marker); });
            infowindow.open(map, marker);
        }
        else {
            geo.geocode({ 'address': address }, function (results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                    var myLatlng = new google.maps.LatLng(results[0].geometry.location.lat(), results[0].geometry.location.lng());
                    map.setCenter(myLatlng);
                    var marker = new google.maps.Marker({ map: map, position: myLatlng });
                    var infowindow = new google.maps.InfoWindow();
                    infowindow.setContent('<font size="1">@Model.Name<br>' + '@Model.Address1<br/>@Model.City,@Model.State-@Model.Zip</font>');
                    google.maps.event.addListener(marker, 'click', function () { infowindow.open(map, marker); });
                    infowindow.open(map, marker);
                }
                else {
                    alert("Geocode was not successful for the following reason: " + status);
                }
            });
        }
    }

    function getDirectionsFromAddress()
    {
        var start = jQuery("#startingAddress").val();
        var end ="@Model.Address1, @Model.City, @Model.State, @Model.Zip";
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.DRIVING
        };
        getDirections(request);
    }

    function getDirectionsFromCurrentLocation(position){
        var start = new google.maps.LatLng(position.coords["latitude"], position.coords["longitude"]);
        var end ="@Model.Address1, @Model.City, @Model.State, @Model.Zip";
        var request = {
            origin: start,
            destination: end,
            travelMode: google.maps.TravelMode.DRIVING
        };
        getDirections(request);
    }

    function getDirections(request){
        directionService.route(request, function (response, status) {
            if (status == google.maps.DirectionsStatus.OK) {
                showSteps(response);
            }
            else {
                alert("Unable to obtain directions. Please check your starting address and try again.");
            }
        })

    }

    function showSteps(result) {
        jQuery('#directions').empty();

        jQuery('#directions').empty();
        var html = '<div style="margin:5px;padding:5px;background-color:#EBF2FC;border-left: 1px solid #EBEFF9;border-right: 1px solid #EBEFF9;text-align:right;">';
        html = html + '<span><strong>' + jQuery.trim(result.routes[0].legs[0].distance.text.replace(/"/g,'')) + ', ' + jQuery.trim(result.routes[0].legs[0].duration.text.replace(/"/g,'')) + '</strong></span></div>';
        jQuery("#directions").html(html);

        //Display Steps
        var steps  = result.routes[0].legs[0].steps;
        for(i=0; i<steps.length; i++) {
            var instructions = JSON.stringify(steps[i].instructions);
            var distance = JSON.stringify(steps[i].distance.text);
            var time = JSON.stringify(steps[i].duration.text);
            jQuery("#directions").append(getEmbedHTML(i+1,instructions,distance,time));
        }
        jQuery('#directions').show();
    }

    function getEmbedHTML(seqno,instructions,distance,duration) {
        var	strhtml = '<div style="width:100%;">';
        strhtml  =  strhtml + '<span>' + seqno + '</span>&nbsp;' + jQuery.trim(instructions.replace(/"/g,'')) + '<br/>'
        strhtml  =  strhtml + '<div style="text-align:right;"><span>' + jQuery.trim(distance.replace(/"/g,'')) + ' <span></div>'
        strhtml  =  strhtml + '</div><div class="separator"></div>';

        return strhtml;
    }

    function noLocationServices(error){
        alert('No location services found');
    }

    function getDirectionsFromPosition(){
        if (Modernizr.geolocation) {
            navigator.geolocation.getCurrentPosition(getDirectionsFromCurrentLocation, noLocationServices);
        } else {
            // no native location services support; alert the user as such.
            noLocationServices("");
        }
    }

    //]]>
</script>

<script type="text/javascript">
    jQuery(document).ready(function () {
        load();
    });
</script>
}

<div id="MapWrapper" style="padding:5px 0 0 0; margin:0 0 0 0; width:100%;">
    <div style="padding:0px; width:100%;">
        <div id="map" style="height:290px; width:100%;"></div>

            <div class="input-group">
                <a id="CrossHair" title="Directions from current location" href="#" onclick="getDirectionsFromPosition(); return false;" style="margin:0 auto;margin-top:7px; width:24px; height:23px; position: absolute; left: 0px; opacity: 1; filter: alpha(opacity=100);"><i class="glyphicon glyphicon-map-marker"></i></a>
                <input type="text" id="startingAddress" class="form-control searchBox" style="left:25px;" placeholder="Starting Address" />
                <span class="input-group-btn" style="z-index:3; margin-left:29px;">
                    <a id="GetDirections" title="Directions from address" href="#" style="margin: 0 auto; margin-top: 7px; margin-left:29px; width: 24px; height: 28px; z-index:3;" onclick="getDirectionsFromAddress(); return false;"><i class="glyphicon glyphicon-search"></i></a>
                </span>
            </div>
    </div>
    <div style="display:none; padding:0px; width:100%;" id="directions"></div>
</div>