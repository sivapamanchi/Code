@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using BGSitecore.Models
@using BGSitecore.Utils
@using Sitecore.Mvc.Configuration
@using BGSitecore.Components

@inherits Glass.Mapper.Sc.Web.Mvc.GlassView<ChangePassword>


@{



}

@using (Html.BeginRouteForm(MvcSettings.SitecoreRouteName, FormMethod.Post))
{
    @Html.AntiForgeryToken()

    @Html.Sitecore().FormHandler("Profile", "ChangePasswordProcess")


    @Html.ValidationSummary(false)

    if ((ViewData["message"] != null))
    {
        <div class="alert alert-success alert-dismissable" role="alert">
            <button type="button" class="close" data-dismiss="alert" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
            @Html.Raw(ViewData["message"])
        </div>
    }
    if (!Model.isAccountLocked)
    {
        @Html.HiddenFor(m => m.isShowPasswordUpdated)
        @Html.HiddenFor(m => m.isPasswordPolicyFail)
        @Html.Hidden("SignInPageUrl", UrlMapper.Map(Model.SiteSettings.SignInWaitPage.Url))

        if (Model.isShowPasswordUpdated)
        {
            <p>@Editable(Model, x => x.PasswordUpdatedMsg)</p>
        }
        else
        {
            if (Model.isPasswordPolicyFail)
            {
                <p>@Editable(Model, x => x.IntroTextPolicyFail)</p>
            }
            else
            {
                <p>@Editable(Model, x => x.IntroTextSelfService)</p>
            }


            <div class="row">
                <div class="col-xs-12 col-md-6">
                    <div class="form-group toggle-password">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.txtCurrentPassword, new { @class = "form-control", id = "user-password", placeholder = @Model.CurrentPasswordCaption, type = "password", maxlength = "20" })

                            <span class="input-group-btn">
                                <a href="#toggle-password" class="btn btn-secondary btn-password" tabindex="-1">
                                    <span class="show-password">show</span>
                                    <span class="hidden hide-password">hide</span>
                                </a>
                            </span>
                        </div>
                    </div><!-- .form-group -->

                    <div class="form-group toggle-password">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.txtNewPassword, new { @class = "form-control js-show-password-rules", id = "user-password", placeholder = @Model.NewPasswordCaption, type = "password", maxlength = "20" })

                            <span class="input-group-btn">
                                <a href="#toggle-password" class="btn btn-secondary btn-password" tabindex="-1">
                                    <span class="show-password">show</span>
                                    <span class="hidden hide-password">hide</span>
                                </a>
                            </span>
                        </div>

                        @Html.Raw(UiUtils.BuildPasswordErrors())
                    </div><!-- .form-group -->
                    <div class="form-group toggle-password">
                        <div class="input-group">
                            @Html.TextBoxFor(m => m.txtConfirmPassword, new { @class = "form-control  js-show-confirm-password-rules", id = "user-password", placeholder = @Model.ConfirmPasswordCaption, type = "password", maxlength = "20" })

                            <span class="input-group-btn">
                                <a href="#toggle-password" class="btn btn-secondary btn-password" tabindex="-1">
                                    <span class="show-password">show</span>
                                    <span class="hidden hide-password">hide</span>
                                </a>
                            </span>
                        </div>
                        @Html.Raw(UiUtils.BuildConfirmPasswordErrors())


                    </div><!-- .form-group -->
                   
                    <div class="form-group">
                        <input type="submit" class="btn btn-primary" value="@Model.SaveCaption" />
                        @{
                            if (Model.isPasswordPolicyFail)
                            {

                                <a class="btn btn-link js-skipchangepassword" name="btnSubmit" >@Editable(Model, x => x.CancelText)</a>

                            }
                        }
                    </div><!-- .form-group -->
                </div>
            </div>
        }
    }
}
